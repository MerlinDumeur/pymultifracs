name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  linter-check:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint code
        uses: github/super-linter/slim@v4
        env:
          LINTER_RULES_PATH: .
          DEFAULT_BRANCH: master
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: ./pymultifracs/*.py
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_PYLINT: true

  test-suite:
    defaults:
      run:
        shell: bash -el {0}
    runs-on: ${{ matrix.os }}
    needs: linter-check
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      # - name: Cache conda
      #   uses: actions/cache@v2
      #   env:
      #     CACHE_NUMBER: 0
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key:
      #       ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
      #       hashFiles('env.yml') }}
      - name: Setup python ${{ matrix.python-version }} with mamba
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: meta.yml
          channels: conda-forge
          channel-priority: strict
          use-only-conda-forge: true
          activate-environment: pymultifracs
          mamba-version: "*"
      - name: Testing
        run: |
          mamba install numpy scipy pywavelets seaborn numba statsmodels pytest pytest-xdist pytest-cov tqdm joblib
          pip install -e .[bootstrap,robust]
          mamba list
          pytest -n auto -x --cov=./ --cov-report=xml
      - name: Upload coverage
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version ==  '3.11' }}
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)