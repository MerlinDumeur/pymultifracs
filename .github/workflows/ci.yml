name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  linter-check:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint code
        uses: super-linter/super-linter/slim@v7.2.1
        env:
          LINTER_RULES_PATH: .
          DEFAULT_BRANCH: master
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: ^(pymultifracs|tests)/.*\.py$
          PYTHON_PYLINT_CONFIG_FILE: .pylintrc
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_PYLINT: true

  test-suite:
    defaults:
      run:
        shell: bash -el {0}
    runs-on: ${{ matrix.os }}
    needs: linter-check
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v4
      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      # - name: Cache conda
      #   uses: actions/cache@v2
      #   env:
      #     CACHE_NUMBER: 0
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key:
      #       ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
      #       hashFiles('env.yml') }}
      - name: Setup python ${{ matrix.python-version }} with mamba
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          # installer-url: https://github.com/conda-forge/miniforge/releases/download/24.11.3-0/Miniforge3-24.11.3-0-Linux-x86_64.sh
          miniforge-version: latest
          environment-file: meta.yml
          channels: conda-forge,numba
          channel-priority: flexible
          activate-environment: pymultifracs
          # mamba-version: "*"
          use-only-tar-bz2: true
      - name: Testing
        run: |
          mamba list
          mamba install -c numba -c conda-forge numpy scipy pywavelets seaborn numba statsmodels pytest pytest-xdist pytest-cov tqdm joblib
          pip install -e .[bootstrap,robust,test]
          mamba list
          pytest -n auto -x --cov=./ --cov-report=xml
      - name: Upload coverage
        # if: ${{ github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.python-version ==  '3.13' }}
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version ==  '3.13' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)