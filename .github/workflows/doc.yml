name: doc

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-docs:
    defaults:
      run:
        shell: bash -el {0}
    if: github.repository == 'neurospin/pymultifracs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # - name: Cache conda
      #   uses: actions/cache@v2
      #   env:
      #     CACHE_NUMBER: 0
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key:
      #       doc-conda-${{ env.CACHE_NUMBER }}-${{
      #       hashFiles('meta.yml') }}
      - name: Setup python with mamba
        uses: conda-incubator/setup-miniconda@v3
        with:
          # mamba-version: "*"
          miniforge-version: latest
          activate-environment: pymultifracs
          python-version: 3.13
          environment-file: meta.yml
          channel-priority: strict
          channels: conda-forge,numba
      - name: Build doc
        shell: bash -el {0}
        # mamba install -c conda-forge pip sphinx numpydoc pydata-sphinx-theme nbsphinx
        run: |
          pip install .[bootstrap,robust,doc]
          cd doc
          make html
          touch _build/html/.nojekyll
      - name: Fix permissions
        run: |
          chmod -c -R +rX "doc/_build/html" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload gh page artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: doc/_build/html/
          retention-days: 1

  deploy-docs:
    needs: build-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or the latest "vX.X.X" version tag for this action
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}
